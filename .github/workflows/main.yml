# This is a basic workflow to help you get started with Actions

name: Build frpclib with gomobile

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout frp
        uses: actions/checkout@v2
        with:
          repository: fatedier/frp
      
      - name: Checkout patches
        uses: actions/checkout@v2
        with:
          path: patches
          
      - name: Config git
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          
      - name: Apply patch
        run: git am patches/frpc-gomobile.patch

      - name: Cache
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      
      - name: Setup Go environment
        uses: actions/setup-go@v2
        with:
          go-version: 1.15
        
      - name: Get gomobile
        run: go get golang.org/x/mobile/cmd/gomobile && gomobile init
      
      - name: Build
        run: |
          mkdir -p build && cd build
          gomobile bind -v -target=android ../cmd/frpc
          ls
          cd -
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        id: upload-release-assets
        uses: alexellis/upload-assets@0.2.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_paths: ./build/*
